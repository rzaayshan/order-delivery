buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}


plugins {
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version "$springDependencyVersion"
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "$sonarqubeVersion"
    id 'groovy'
}
group = 'az.task'


repositories {
    mavenCentral()
}

version = "$projectVersion"
sourceCompatibility = "$sourceCompatibility"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation "junit:junit:$junitVersion"
    implementation "io.springfox:springfox-swagger-ui:$swaggerVersion"
    implementation "io.springfox:springfox-swagger2:$swaggerVersion"
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: "$jaxbVersion"
    implementation "org.postgresql:postgresql:42.4.0"
    implementation "org.liquibase:liquibase-core:4.14.0"
    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
    implementation "com.auth0:java-jwt:4.0.0"
    implementation "io.jsonwebtoken:jjwt-api:0.11.5"
    compileOnly "org.projectlombok:lombok"
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    testImplementation "org.spockframework:spock-spring:$spockVersion"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    implementation 'javax.validation:validation-api:2.0.1.Final'
    testRuntimeOnly 'org.codehaus.groovy:groovy-all:3.0.12'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${releaseTrainVersion}"
    }
}

jacoco {
    toolVersion = "0.8.4"
    reportsDir = file("build/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
    }
}


springBoot {
    buildInfo()
}

bootJar {
    archiveName 'app.jar'
}


